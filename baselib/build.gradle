apply plugin: 'com.android.library'

// 加载config.properties文件
Properties configProp = new Properties()
configProp.load(new FileInputStream(file("$rootDir/config.properties")))

android {

    compileSdkVersion rootProject.android_compileSdkVersion
    buildToolsVersion rootProject.android_buildToolsVersion

    defaultConfig {
        minSdkVersion android_minSdkVersion
        targetSdkVersion android_targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", configProp['ReleaseUrl'])
            buildConfigField("boolean", "DEBUG_MODE", "false")//是否debug模式
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", configProp['DebugUrl'])
            buildConfigField("boolean", "DEBUG_MODE", "true")//是否debug模式
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    compileOnly multidex
    //网络请求
    compileOnly retrofit
    compileOnly gson
    compileOnly loginterceptor
    //rxjava
    compileOnly rxjava
    compileOnly rxandroid
    //权限申请 https://github.com/tbruyelle/RxPermissions
    compileOnly rxpermissions
    //图片
    compileOnly glide
    annotationProcessor glidecompiler
    compileOnly okhttp_integration
    //日志输出 https://github.com/orhanobut/logger
    compileOnly outlogger
}














